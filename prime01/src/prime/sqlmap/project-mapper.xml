<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="project">
	<select id="getCountListByCol" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM PROJECTS
		<dynamic prepend="WHERE">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(PROJECT_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>
	<select id="getListByCol" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT P.PROJECT_ID AS  projectId,
		P.PROJECT_NAME AS projectName,
		P.PROJECT_RECEIVER as projectReceiver,
		P.PROJECT_ASSIGNER as projectAssigner,
		P.PROJECT_START_DATE as projectStartDate,
		P.PROJECT_ESTIMATE_DATE as projectEstimateDate,
		P.PROJECT_DESCRIPTION as projectDescription,
		PD.PROJECT_STATUS as projectStatus
		FROM PROJECTS P, PROJECT_DETAILS PD
		WHERE P.PROJECT_ID=PD.PROJECT_ID
		<dynamic prepend="WHERE">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(P.PROJECT_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
			</isNotNull>
		</dynamic>
		ORDER BY P.PROJECT_ID ASC) page
		WHERE ROWNUM <![CDATA[ <= ]]>
		#endRow#) WHERE rnum <![CDATA[ >= ]]>
		#startRow#
	</select>
	
	<select id="get" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.lang.Integer">
		SELECT PROJECT_ID AS projectId,
		PROJECT_NAME AS projectName,
		PROJECT_RECEIVER as projectReceiver,
		PROJECT_ASSIGNER as projectAssigner,
		PROJECT_START_DATE as projectStartDate,
		PROJECT_ESTIMATE_DATE as projectEstimateDate,
		PROJECT_DESCRIPTION as projectDescription
		FROM PROJECTS
		WHERE PROJECT_ID=#id#
	</select>
	
	<select id="getProjectMember" resultClass ="prime.user.project.ProjectBean"
		parameterClass="java.util.Map">
		  SELECT  DISTINCT E.EMPLOYEE_ID AS employeeId,
		  E.EMPLOYEE_NAME  AS employeeName,
		  (
		  SELECT 
		  listagg (R.ROLE_NAME, ', ') WITHIN GROUP (ORDER BY R.ROLE_NAME)
		    FROM ROLES R
		  JOIN PROJECT_MEMBERS PMX ON R.ROLE_ID = PMX.ROLE_ID
		   WHERE  PMX.PROJECT_ID = 1 AND PMX.EMPLOYEE_ID=E.EMPLOYEE_ID
		  )
		   AS roleName,
		  D.DIVISION_NAME AS divisionName,
		  E.EMAIL AS email,
		  E.CONTACT_NUMBER AS contactNumber,
		  PD.PROJECT_STATUS AS projectStatus,
		  P.PROJECT_ID AS projectId
		  FROM   EMPLOYEES E,
		  DIVISIONS D,
		  PROJECT_DETAILS PD,
		  PROJECTS P,
		  PROJECT_MEMBERS PM
		   WHERE       P.PROJECT_ID = PM.PROJECT_ID
		  AND E.EMPLOYEE_ID = PM.EMPLOYEE_ID
		  AND E.DIVISION_ID = D.DIVISION_ID
		  AND P.PROJECT_ID=PD.PROJECT_ID
          AND P.PROJECT_ID = #projectId#
		
	</select>
	
	<insert id="insert" parameterClass="prime.user.project.ProjectBean">
		INSERT INTO PROJECTS(PROJECT_ID, PROJECT_NAME, PROJECT_ASSIGNER, PROJECT_RECEIVER, PROJECT_START_DATE, 
		PROJECT_ESTIMATE_DATE, PROJECT_DESCRIPTION)
		VALUES
		(#projectId#,#projectName#,#projectAssigner#,#projectReceiver#,#projectStartDate#,#projectEstimateDate#,#projectDescription#)
	</insert>
	
	<select id="getNewId" resultClass="java.lang.Integer">
		SELECT NVL(MAX(PROJECT_ID)+1, 1)
		FROM PROJECTS
	</select>
	
	<insert id="insertDetail" parameterClass="prime.user.project.ProjectBean">
		INSERT INTO PROJECT_DETAILS(PROJECT_ID, PROJECT_ASSIGNER, PROJECT_RECEIVER, PROJECT_CHANGE_DATE, 
		PROJECT_STATUS, PROJECT_CHANGE_NOTE)
		VALUES
		(#projectId#,#projectAssigner#,#projectReceiver#,CURRENT_TIMESTAMP,#projectStatus#,#projectChangeNote#)
	</insert>
	
	<select id="getProjectMemberDetailsTask" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.lang.Integer">
		SELECT   E.EMPLOYEE_NAME as employeeName , 
		T.TASK_START_DATE as taskStartDate, 
		T.TASK_NAME as taskName
		FROM   EMPLOYEES E,
        PROJECT_MEMBERS PM,
        TASKS T,
        PROJECTS P
		WHERE   E.EMPLOYEE_ID = PM.EMPLOYEE_ID
        AND PM.PROJECT_MEMBER_ID = T.PROJECT_MEMBER_ID
        AND P.PROJECT_ID = PM.PROJECT_ID
        AND PM.PROJECT_MEMBER_ID = #projectMemberId#
	</select>
	
	
	<select id="getDataEmployee" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.lang.Integer">
		SELECT DISTINCT E.EMPLOYEE_NAME AS employeeName, 
        PO.POSITION_NAME as positionName, 
        E.CONTACT_NUMBER AS contactNumber, 
        E.EMAIL AS email, 
        D.DIVISION_NAME AS divisionName
        FROM   EMPLOYEES E,
        PROJECT_MEMBERS PM,
        POSITIONS PO,
        DIVISIONS D
        WHERE E.EMPLOYEE_ID = PM.EMPLOYEE_ID
        AND PO.POSITION_ID=E.POSITION_ID
        AND D.DIVISION_ID=E.DIVISION_ID
        AND PM.EMPLOYEE_ID=#id#
	</select>
	
	
	<select id="getProjectMemberDetails" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.util.Map">
		SELECT   DISTINCT
         
         T.TASK_START_DATE AS taskStartDate,
         T.TASK_ESTIMATE_DATE AS taskEstimateDate,
         T.TASK_NAME AS taskName,
         R.ROLE_NAME AS roleName,
         T.TASK_ASSIGNER AS taskAssigner,
         T.TASK_LAST_STATUS AS taskStatus,
         P.PROJECT_ID AS projectId,
         PM.ROLE_ID AS roleId
         FROM   TASKS T,
         ROLES R,
         TASK_DETAILS TD,
         PROJECT_MEMBERS PM,
         EMPLOYEES E,
           PROJECTS P
        
         WHERE  E.EMPLOYEE_ID=PM.EMPLOYEE_ID
         AND PM.PROJECT_MEMBER_ID=T.PROJECT_MEMBER_ID
        AND PM.ROLE_ID = R.ROLE_ID
        AND P.PROJECT_ID=PM.PROJECT_ID
        AND PM.EMPLOYEE_ID = #projectMemberId#
	</select>
	
	
	
	<resultMap id="listRoles" class="java.util.HashMap">
    		 <result property="key" column="projectMemberId" />
     		 <result property="value" column="roleName" />
	</resultMap>
	<select id="getProjectRoles" parameterClass="java.util.Map" resultMap="listRoles" >
		SELECT   DISTINCT PM.PROJECT_MEMBER_ID AS projectMemberId,
		R.ROLE_NAME AS roleName
  		FROM   PROJECTS P,
        EMPLOYEES E,
        PROJECT_DETAILS PD,
        PROJECT_MEMBERS PM,
        ROLES R
 		WHERE P.PROJECT_ID = PM.PROJECT_ID	
        AND E.EMPLOYEE_ID = PM.EMPLOYEE_ID
        AND R.ROLE_ID = PM.ROLE_ID
        AND PM.EMPLOYEE_ID = #employeeId#
        AND PM.PROJECT_ID = #projectId#
	</select>
	
	
	<select id="getDataProjectMemberByProjectMemberId" resultClass="prime.user.project.ProjectBean" parameterClass="java.lang.Integer">
		SELECT DISTINCT 
			PM.PROJECT_MEMBER_ID	AS projectMemberId,
			E.EMPLOYEE_ID			AS employeeId,
           	E.EMPLOYEE_NAME			AS employeeName,
            R.ROLE_ID				AS roleId,
            R.ROLE_NAME				AS roleName
		  FROM PROJECTS P 
		  JOIN PROJECT_MEMBERS PM ON P.PROJECT_ID = PM.PROJECT_ID
		  JOIN ROLES R ON R.ROLE_ID = PM.ROLE_ID
		  JOIN EMPLOYEES E ON E.EMPLOYEE_ID = PM.EMPLOYEE_ID
		 WHERE PM.PROJECT_MEMBER_ID = #id#
	</select>
</sqlMap> 