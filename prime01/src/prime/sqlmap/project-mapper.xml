<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="project">
	<select id="getCountListByCol" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM PROJECTS
		<dynamic prepend="WHERE">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(PROJECT_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>
	<select id="getListByCol" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT PROJECT_ID AS  projectId,
		PROJECT_NAME AS projectName,
		PROJECT_RECEIVER as projectReceiver,
		PROJECT_ASSIGNER as projectAssigner,
		PROJECT_START_DATE as projectStartDate,
		PROJECT_ESTIMATE_DATE as projectEstimateDate,
		PROJECT_DESCRIPTION as projectDescription
		FROM PROJECTS
		<dynamic prepend="WHERE">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(project_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
			</isNotNull>
		</dynamic>
		ORDER BY PROJECT_ID ASC) page
		WHERE ROWNUM <![CDATA[ <= ]]>
		#endRow#) WHERE rnum <![CDATA[ >= ]]>
		#startRow#
	</select>
	
	<select id="get" resultClass="prime.user.project.ProjectBean"
		parameterClass="java.lang.Integer">
		SELECT PROJECT_ID AS projectId,
		PROJECT_NAME AS projectName,
		PROJECT_RECEIVER as projectReceiver,
		PROJECT_ASSIGNER as projectAssigner,
		PROJECT_START_DATE as projectStartDate,
		PROJECT_ESTIMATE_DATE as projectEstimateDate,
		PROJECT_DESCRIPTION as projectDescription
		FROM PROJECTS
		WHERE PROJECT_ID=#id#
	</select>
	
	<select id="getProjectMember" resultClass ="prime.user.project.ProjectBean"
		parameterClass="java.util.Map">
		
		  SELECT   E.EMPLOYEE_NAME  AS employeeName,
    	  R.ROLE_NAME AS roleName,
    	  D.DIVISION_NAME AS divisionName,
	      E.EMAIL AS email,
	      E.CONTACT_NUMBER AS contactNumber,
	      PD.PROJECT_STATUS AS projectStatus,
	      PM.PROJECT_MEMBER_ID AS projectMemberID
		  FROM   EMPLOYEES E,
	      ROLES R,
	      DIVISIONS D,
	      PROJECT_DETAILS PD,
	      PROJECTS P,
	      PROJECT_MEMBERS PM
	      <dynamic prepend="WHERE">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(project_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
			</isNotNull>
		</dynamic>
	 	  WHERE       P.PROJECT_ID = PM.PROJECT_ID
          AND E.EMPLOYEE_ID = PM.EMPLOYEE_ID
          AND R.ROLE_ID = PM.ROLE_ID
          AND E.DIVISION_ID = D.DIVISION_ID
          AND P.PROJECT_ID=PD.PROJECT_ID
          AND P.PROJECT_ID = #projectId#
		
	</select>
	
	<insert id="insert" parameterClass="prime.user.project.ProjectBean">
		INSERT INTO PROJECTS(PROJECT_ID, PROJECT_NAME, PROJECT_ASSIGNER, PROJECT_RECEIVER, PROJECT_START_DATE, 
		PROJECT_ESTIMATE_DATE, PROJECT_DESCRIPTION)
		VALUES
		(#projectId#,#projectName#,#projectAssigner#,#projectReceiver#,#projectStartDate#,#projectEstimateDate#,#projectDescription#)
	</insert>
	
	<select id="getNewId" resultClass="java.lang.Integer">
		SELECT NVL(MAX(PROJECT_ID)+1, 1)
		FROM PROJECTS
	</select>
	
	<insert id="insertDetail" parameterClass="prime.user.project.ProjectBean">
		INSERT INTO PROJECT_DETAILS(PROJECT_ID, PROJECT_ASSIGNER, PROJECT_RECEIVER, PROJECT_CHANGE_DATE, 
		PROJECT_STATUS, PROJECT_CHANGE_NOTE)
		VALUES
		(#projectId#,#projectAssigner#,#projectReceiver#,CURRENT_TIMESTAMP,#projectStatus#,#projectChangeNote#)
	</insert>
</sqlMap>