<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="employee">
	<insert id="insert" parameterClass="prime.admin.employee.EmployeeBean">
		INSERT INTO DIVISIONS
		(DIVISION_ID , DIVISION_NAME) VALUES 
		(#divisionId#, #divisionName#)
	</insert>
	
	<select id="getNewId" resultClass="java.lang.Integer">
		SELECT NVL(MAX(EMPLOYEE_ID)+1, 1) FROM EMPLOYEES
	</select>
	
	<select id="get"  resultClass="prime.admin.employee.EmployeeBean" parameterClass="java.lang.Integer">
		SELECT 
        EMP.EMPLOYEE_ID AS employeeId, 
        EMP.EMPLOYEE_NAME AS employeeName,
        GENDER AS gender,
        ADDRESS AS address,
        BIRTHDATE AS birthdate,
        CONTACT_NUMBER AS contactNumber,
        EMAIL AS email,
        DIVISION_NAME AS divisionName,
        POSITION_NAME AS positionName,
        EMPLOYEE_LEVEL AS employeeLevel,
        MANAGER.EMPLOYEE_NAME AS managerName
        FROM EMPLOYEES EMP 
        INNER JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
        INNER JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
        LEFT JOIN (SELECT EMPLOYEE_ID, EMPLOYEE_NAME FROM EMPLOYEES) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
        WHERE EMP.EMPLOYEE_ID=#id#
	</select>
	
	<select id="getListByCol" resultClass="prime.admin.employee.EmployeeBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT 
        EMP.EMPLOYEE_ID AS employeeId, 
        EMP.EMPLOYEE_NAME AS employeeName,
        GENDER AS gender,
        ADDRESS AS address,
        BIRTHDATE AS birthdate,
        CONTACT_NUMBER AS contactNumber,
        EMAIL AS email,
        DIVISION_NAME AS divisionName,
        POSITION_NAME AS positionName,
        EMPLOYEE_LEVEL AS employeeLevel,
        MANAGER.EMPLOYEE_NAME AS managerName
        FROM EMPLOYEES EMP 
        INNER JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
        INNER JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
        LEFT JOIN (SELECT EMPLOYEE_ID, EMPLOYEE_NAME FROM EMPLOYEES) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
	    <dynamic prepend="WHERE">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	    ORDER BY EMP.EMPLOYEE_ID ASC) page 
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getCountListByCol" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1) 
		FROM EMPLOYEES 
	    <dynamic prepend="WHERE">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	</select>
	
	<select id="getListByColumnAndDivision" resultClass="prime.admin.employee.EmployeeBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT 
        EMP.EMPLOYEE_ID AS employeeId, 
        EMP.EMPLOYEE_NAME AS employeeName,
        GENDER AS gender,
        ADDRESS AS address,
        BIRTHDATE AS birthdate,
        CONTACT_NUMBER AS contactNumber,
        EMAIL AS email,
        DIVISION_NAME AS divisionName,
        POSITION_NAME AS positionName,
        EMPLOYEE_LEVEL AS employeeLevel,
        MANAGER.EMPLOYEE_NAME AS managerName
        FROM EMPLOYEES EMP 
        INNER JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
        INNER JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
        LEFT JOIN (SELECT EMPLOYEE_ID, EMPLOYEE_NAME FROM EMPLOYEES) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
		WHERE 1=1 AND  DIV.DIVISION_ID = #divisionId#  
		<dynamic prepend="AND">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="NAME">
					UPPER(EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	    ORDER BY EMP.EMPLOYEE_ID ASC) page 
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getCountByColumnAndDivision" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1) 
		FROM EMPLOYEES EMP 
        INNER JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
        INNER JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
        LEFT JOIN (SELECT EMPLOYEE_ID, EMPLOYEE_NAME FROM EMPLOYEES) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
        WHERE  1=1 AND DIV.DIVISION_ID = #divisionId# 
	    <dynamic prepend="AND">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="NAME">
			         UPPER(EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	</select>
</sqlMap>