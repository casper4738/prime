
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="task">
	<insert id="insert" parameterClass="prime.user.task.TaskBean">
		INSERT INTO TASKS 
			(TASK_ID, TASK_NAME, TASK_RECEIVER, TASK_ASSIGNER, TASK_START_DATE, 
			TASK_ESTIMATE_DATE, TASK_DESCRIPTION, PROJECT_MEMBER_ID)
		VALUES
			(#taskId#, #taskName#, #taskReceiver#, #taskAssigner#, #taskStartDate#, 
			#taskEstimateDate#,#taskDescription#,
			<isEqual property="projectMemberId" compareValue="0">
				null
			</isEqual>
			<isNotEqual property="projectMemberId" compareValue="0">
				#projectMemberId#
			</isNotEqual>
			)
	</insert>

	<insert id="insertDetail" parameterClass="prime.user.task.TaskBean">
		INSERT INTO TASK_DETAILS 
			(TASK_ID, TASK_CHANGE_DATE, TASK_STATUS, TASK_CHANGE_NOTE)
		VALUES 
			(#taskId#, SYSDATE, #taskStatus#, #taskChangeNote#)
	</insert>
	
	<insert id="insertDetailBySelectTask" parameterClass="prime.user.task.TaskBean">
		INSERT INTO TASK_DETAILS
			(TASK_ID, TASK_CHANGE_DATE, TASK_STATUS, TASK_CHANGE_NOTE)
		SELECT TASK.TASK_ID, SYSDATE, #taskStatus#, #taskChangeNote#
			FROM TASKS TASK
		WHERE TASK.TASK_RECEIVER = #taskReceiver# AND TASK.PROJECT_MEMBER_ID = #projectMemberId#
	</insert>
	
	<select id="getNewId" resultClass="java.lang.Integer">
		SELECT 
			NVL(MAX(TASK_ID)+1, 1)
		FROM TASKS
	</select>
	
	<update id="updateActualStart" parameterClass="java.util.Map">
		UPDATE TASKS SET 
			ACTUAL_START = #actualStart#
		WHERE TASK_ID = #taskId#
	</update>
	
	<update id="updateActualEnd" parameterClass="java.util.Map">
		UPDATE TASKS SET 
			ACTUAL_END = #actualEnd#
		WHERE TASK_ID = #taskId#
	</update>
	
	<update id="updateActualMainDays" parameterClass="java.util.Map">
		UPDATE TASKS SET 
			MAIN_DAYS = #mainDays#
		WHERE TASK_ID = #taskId#
	</update>

	<select id="get" resultClass="prime.user.task.TaskBean" parameterClass="java.util.Map">
		SELECT TASK_ID 					AS taskId,
			TASK_NAME 					AS taskName,
			TASK_RECEIVER 				AS taskReceiver,
			TASK_ASSIGNER 				AS taskAssigner,
			TASK_START_DATE 			AS taskStartDate,
			TASK_ESTIMATE_DATE 			AS taskEstimateDate,
			TASK_DESCRIPTION 			AS taskDescription,
			TASK_LAST_STATUS 			AS taskLastStatus,
			PROJECT_MEMBER_ID 			AS projectMemberId,
			EMP_ASSIGN.EMPLOYEE_NAME 	AS taskAssignerName,
			EMP_RECEIVE.EMPLOYEE_NAME	AS taskReceiverName,
			ACTUAL_START				AS actualStart,
			ACTUAL_END					AS actualEnd,
			MAIN_DAYS					AS mainDays,
			PROJECT_MEMBER_ID			AS projectMemberId,
			NVL(((SELECT COUNT(ACTIVITY_ID) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS=#finish#) /
			  (SELECT NULLIF(COUNT(ACTIVITY_ID),0) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS!=#abort#)
			) * 100, 0) 				AS percentage
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		WHERE TASK_ID=#id#
	</select>
	
	<select id="isCheckStatus" resultClass="java.lang.Boolean" parameterClass="java.util.Map">
		SELECT
		    CASE WHEN COUNT(1) > 0 THEN 1
		         ELSE 0
		    END  
		FROM TASKS 
		WHERE TASK_ID =#taskId# AND NVL(TASK_LAST_STATUS, 0) = #status#
	</select>
	
	<select id="isCheckStatusDetail" resultClass="java.lang.Boolean" parameterClass="java.util.Map">
		SELECT
		    CASE WHEN COUNT(1) > 0 THEN 1
		         ELSE 0
		    END  
		FROM TASK_DETAILS
		WHERE TASK_ID =#taskId# AND NVL(TASK_STATUS, 0) = #status#
	</select>
	
	<select id="getListByProjectId" resultClass="prime.user.task.TaskBean" parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT 
			TASK.TASK_ID 		AS taskId,
            TASK_NAME 			AS taskName,
            TASK_RECEIVER as taskReceiver,
            TASK_ASSIGNER as taskAssigner,
            TASK_START_DATE as taskStartDate,
            TASK_ESTIMATE_DATE as taskEstimateDate,
            TASK_DESCRIPTION as taskDescription,
            TASK.PROJECT_MEMBER_ID as projectMemberId,
            EMP_ASSIGN.EMPLOYEE_NAME as taskAssignerName,
            EMP_RECEIVE.EMPLOYEE_NAME as taskReceiverName,
            TASK.TASK_LAST_STATUS AS taskLastStatus,
            ACTUAL_START                AS actualStart,
            ACTUAL_END                    AS actualEnd,
            MAIN_DAYS                    AS mainDays,
            (SELECT Y.PROJECT_NAME FROM PROJECT_MEMBERS X JOIN PROJECTS Y ON X.PROJECT_ID=Y.PROJECT_ID 
              WHERE X.PROJECT_MEMBER_ID=TASK.PROJECT_MEMBER_ID) AS projectName,
            NVL(((SELECT COUNT(ACTIVITY_ID) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS=4) /
              (SELECT NULLIF(COUNT(ACTIVITY_ID),0) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS!=5)
            ) * 100, 0) AS percentage
        FROM TASKS TASK
        JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
        JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
        JOIN PROJECT_MEMBERS PRO_MBR ON PRO_MBR.PROJECT_MEMBER_ID = TASK.PROJECT_MEMBER_ID
        JOIN (
            SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
            GROUP BY TD.TASK_ID
        ) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
        WHERE PRO_MBR.PROJECT_ID = #projectId#
        <dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(EMP_ASSIGN.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(EMP_RECEIVE.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
		ORDER BY TASK_NAME ASC) page 
		WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getCountListByProjectId" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT 
			COUNT(1)
        FROM TASKS TASK
        JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
        JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
        JOIN PROJECT_MEMBERS PRO_MBR ON PRO_MBR.PROJECT_MEMBER_ID = TASK.PROJECT_MEMBER_ID
        JOIN (
            SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
            GROUP BY TD.TASK_ID
        ) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
        WHERE PRO_MBR.PROJECT_ID = #projectId#
        <dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(EMP_ASSIGN.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(EMP_RECEIVE.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>
	
	<!-- TASK HEAD -->
	<select id="getListByColumnHead" resultClass="prime.user.task.TaskBean" parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT TASK.TASK_ID 		AS taskId,
			TASK_NAME 				AS taskName,
			TASK_RECEIVER 			AS taskReceiver,
			TASK_ASSIGNER 			AS taskAssigner,
			TASK_START_DATE 		AS taskStartDate,
			TASK_ESTIMATE_DATE 		AS taskEstimateDate,
			TASK_DESCRIPTION 		AS taskDescription,
			PROJECT_MEMBER_ID 		AS projectMemberId,
			EMP_ASSIGN.EMPLOYEE_NAME 	AS taskAssignerName,
			EMP_RECEIVE.EMPLOYEE_NAME 	AS taskReceiverName,
			TASK.TASK_LAST_STATUS 		AS taskLastStatus,
			ACTUAL_START				AS actualStart,
			ACTUAL_END					AS actualEnd,
			MAIN_DAYS					AS mainDays,
			(SELECT Y.PROJECT_NAME FROM PROJECT_MEMBERS X JOIN PROJECTS Y ON X.PROJECT_ID=Y.PROJECT_ID 
			  WHERE X.PROJECT_MEMBER_ID=TASK.PROJECT_MEMBER_ID) AS projectName,
			NVL(((SELECT COUNT(ACTIVITY_ID) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS=#finish#) /
			  (SELECT NULLIF(COUNT(ACTIVITY_ID),0) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS!=#abort#)
			) * 100, 0) 				AS percentage
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		JOIN (
		    SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
		    GROUP BY TD.TASK_ID
		) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
		WHERE TASK_ASSIGNER=#taskAssigner#
		<dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(EMP_ASSIGN.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(EMP_RECEIVE.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
		OR TASK.TASK_ID  IN (
            SELECT X.TASK_ID FROM TASKS X
            JOIN EMPLOYEES Y ON Y.EMPLOYEE_ID = X.TASK_RECEIVER
            WHERE Y.HEAD_ID = (SELECT RT.HEAD_ID FROM EMPLOYEES RT WHERE RT.EMPLOYEE_ID = EMP_RECEIVE.EMPLOYEE_ID)
            AND X.TASK_ASSIGNER = TASK.TASK_ASSIGNER
        )
		OR TASK.TASK_ID  IN (
		    SELECT X.TASK_ID FROM TASKS X
		    JOIN EMPLOYEES Y ON Y.EMPLOYEE_ID= X.TASK_ASSIGNER AND Y.EMPLOYEE_ID = X.TASK_RECEIVER
		    WHERE Y.HEAD_ID = #taskAssigner#
		    <dynamic prepend="AND">
				<isNotNull property="columnSearch">
					<isEqual property="columnSearch" compareValue="NAME">
						UPPER(X.TASK_NAME) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="DESCRIPTION">
						UPPER(X.TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="STARTDATE">
						X.TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
					<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
						X.TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
				</isNotNull>
			</dynamic>
		) OR TASK.TASK_ID IN (
			SELECT X.TASK_ID FROM TASKS X
			JOIN PROJECT_MEMBERS Y ON X.PROJECT_MEMBER_ID = Y.PROJECT_MEMBER_ID
			JOIN EMPLOYEES Z ON Z.EMPLOYEE_ID=X.TASK_RECEIVER
            WHERE Z.HEAD_ID = #taskAssigner#
            <dynamic prepend="AND">
				<isNotNull property="columnSearch">
					<isEqual property="columnSearch" compareValue="NAME">
						UPPER(X.TASK_NAME) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="DESCRIPTION">
						UPPER(X.TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="STARTDATE">
						X.TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
					<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
						X.TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
				</isNotNull>
			</dynamic>
        )
		ORDER BY TASK_NAME ASC) page 
		WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>

	<select id="getCountByColumnHead" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		JOIN (
		    SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
		    GROUP BY TD.TASK_ID
		) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
		WHERE TASK_ASSIGNER=#taskAssigner#
		<dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(EMP_ASSIGN.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(EMP_RECEIVE.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
		OR TASK.TASK_ID  IN (
		    SELECT X.TASK_ID FROM TASKS X
		    JOIN EMPLOYEES Y ON Y.EMPLOYEE_ID= X.TASK_ASSIGNER AND Y.EMPLOYEE_ID = X.TASK_RECEIVER
		    WHERE Y.HEAD_ID = #taskAssigner#
		    <dynamic prepend="AND">
				<isNotNull property="columnSearch">
					<isEqual property="columnSearch" compareValue="NAME">
						UPPER(X.TASK_NAME) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="DESCRIPTION">
						UPPER(X.TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="STARTDATE">
						X.TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
					<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
						X.TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
				</isNotNull>
			</dynamic>
		) OR TASK.TASK_ID IN (
			SELECT X.TASK_ID FROM TASKS X
			JOIN PROJECT_MEMBERS Y ON X.PROJECT_MEMBER_ID = Y.PROJECT_MEMBER_ID
			JOIN EMPLOYEES Z ON Z.EMPLOYEE_ID=X.TASK_RECEIVER
            WHERE Z.HEAD_ID = #taskAssigner#
            <dynamic prepend="AND">
				<isNotNull property="columnSearch">
					<isEqual property="columnSearch" compareValue="NAME">
						UPPER(X.TASK_NAME) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="DESCRIPTION">
						UPPER(X.TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
					</isEqual>
					<isEqual property="columnSearch" compareValue="STARTDATE">
						X.TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
					<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
						X.TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
					</isEqual>
				</isNotNull>
			</dynamic>
        )
	</select>
	<!-- END TASK HEAD -->

	<!-- TASK SUBORDINATE -->
	<select id="getListByColumnSubordinate" resultClass="prime.user.task.TaskBean" parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT TASK.TASK_ID AS taskId,
			TASK_NAME AS taskName,
			TASK_RECEIVER as taskReceiver,
			TASK_ASSIGNER as taskAssigner,
			TASK_START_DATE as taskStartDate,
			TASK_ESTIMATE_DATE as taskEstimateDate,
			TASK_DESCRIPTION as taskDescription,
			PROJECT_MEMBER_ID as projectMemberId,
			EMP_ASSIGN.EMPLOYEE_NAME as taskAssignerName,
			EMP_RECEIVE.EMPLOYEE_NAME as taskReceiverName,
			TASK.TASK_LAST_STATUS AS taskLastStatus,
			ACTUAL_START				AS actualStart,
			ACTUAL_END					AS actualEnd,
			MAIN_DAYS					AS mainDays,
			(SELECT Y.PROJECT_NAME FROM PROJECT_MEMBERS X JOIN PROJECTS Y ON X.PROJECT_ID=Y.PROJECT_ID 
			  WHERE X.PROJECT_MEMBER_ID=TASK.PROJECT_MEMBER_ID) AS projectName,
			NVL(((SELECT COUNT(ACTIVITY_ID) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS=#finish#) /
			  (SELECT NULLIF(COUNT(ACTIVITY_ID),0) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS!=#abort#)
			) * 100, 0) AS percentage
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		JOIN (
		    SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
		    GROUP BY TD.TASK_ID
		) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
		WHERE TASK_RECEIVER=#taskReceiver#
		<dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(TASK_ASSIGNER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(TASK_RECEIVER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
		ORDER BY TASK_NAME ASC) page 
		WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>

	<select id="getCountByColumnSubordinate" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		JOIN (
		    SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
		    GROUP BY TD.TASK_ID
		) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
		WHERE TASK_RECEIVER=#taskReceiver#
		<dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(TASK_ASSIGNER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(TASK_RECEIVER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
	</select>
	<!-- END TASK SUBORNINATE -->
	
</sqlMap>