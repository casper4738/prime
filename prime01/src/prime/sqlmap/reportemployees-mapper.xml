<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="reportemployees">

	<select id="getListByColumn" resultClass="prime.user.report.employees.ReportEmployeesBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT 
		    EMP.EMPLOYEE_ID AS employeeId, 
		    EMP.EMPLOYEE_NAME AS employeeName,
		    GENDER AS gender,
		    ADDRESS AS address,
		    BIRTHDATE AS birthdate,
		    HIRE_DATE AS hireDate,
		    CONTACT_NUMBER AS contactNumber,
		    EMAIL AS email,
		    DIVISION_NAME AS divisionName,
		    POSITION_NAME AS positionName,
		    MANAGER.EMPLOYEE_NAME AS managerName,
		    RE.RESIGN_DATE AS resignDate
		FROM EMPLOYEES EMP 
		LEFT JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
		JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
		LEFT JOIN (
		    SELECT E.EMPLOYEE_ID, E.EMPLOYEE_NAME FROM EMPLOYEES E
		) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
		LEFT JOIN (
		    SELECT EMPLOYEE_ID, RESIGN_DATE FROM RESIGN_EMPLOYEES
		)RE ON RE.EMPLOYEE_ID = EMP.EMPLOYEE_ID
	    <dynamic prepend="WHERE">
	        <isNotNull property="columnSearch">
	        	<isEqual property="columnSearch" compareValue="ID">
			          UPPER(EMP.EMPLOYEE_ID) LIKE UPPER(#value#)
				</isEqual>
		       	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(EMP.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="GENDER">
			          UPPER(EMP.GENDER) = #value#
				</isEqual> 
				<isEqual property="columnSearch" compareValue="EMAIL">
			          UPPER(EMP.EMAIL) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="DIVISION">
			          UPPER(DIVISION_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="POSITION">
			          UPPER(POSITION_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="MANAGER">
			          UPPER(MANAGER.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="STATUS">
			           (CASE 
				            WHEN NVL(TO_CHAR(RE.RESIGN_DATE, 'yyyy-mm-dd'), '0') = '0' THEN 0
				            ELSE 1
				        END) = #value#
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	    ORDER BY EMP.EMPLOYEE_ID ASC) page 
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getCountByColumn" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1) 
		FROM EMPLOYEES EMP 
		LEFT JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
		JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
		LEFT JOIN (
		    SELECT E.EMPLOYEE_ID, E.EMPLOYEE_NAME FROM EMPLOYEES E
		) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
		LEFT JOIN (	
		    SELECT EMPLOYEE_ID, RESIGN_DATE FROM RESIGN_EMPLOYEES
		)RE ON RE.EMPLOYEE_ID = EMP.EMPLOYEE_ID
	    <dynamic prepend="WHERE">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="ID">
			          UPPER(EMP.EMPLOYEE_ID) LIKE UPPER(#value#)
				</isEqual>
		       	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(EMP.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="GENDER">
			          UPPER(GENDER) LIKE UPPER(#value#)
				</isEqual> 
				<isEqual property="columnSearch" compareValue="EMAIL">
			          UPPER(EMAIL) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="DIVISION">
			          UPPER(DIVISION_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="POSITION">
			          UPPER(POSITION_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
				<isEqual property="columnSearch" compareValue="MANAGER">
			          UPPER(MANAGER.EMPLOYEE_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
	        </isNotNull>
	    </dynamic>
	</select>
	
	<select id="get"  resultClass="prime.user.report.employees.ReportEmployeesBean" parameterClass="java.lang.Integer">
		SELECT 
	        EMP.EMPLOYEE_ID AS employeeId, 
	        EMP.EMPLOYEE_NAME AS employeeName,
	        GENDER AS gender,
	        ADDRESS AS address,
	        BIRTHDATE AS birthdate,
	        HIRE_DATE AS hireDate,
	        CONTACT_NUMBER AS contactNumber,
	        EMAIL AS email,
	        DIV.DIVISION_ID AS divisionId,
	        DIV.DIVISION_NAME AS divisionName,
	        POS.POSITION_ID AS positionId,
	        POS.POSITION_NAME AS positionName,
	        MANAGER.EMPLOYEE_ID AS managerId,
	        MANAGER.EMPLOYEE_NAME AS managerName,
	        MANAGER.DIVISION_ID AS managerDivisionId, 
	        MANAGER.TREE_ID AS managerTreeId,
	        RE.RESIGN_DATE AS resignDate,
	        RE.RESIGN_NOTE AS resignNote,
	        EMP.TREE_ID AS treeId 
        FROM EMPLOYEES EMP 
        LEFT JOIN DIVISIONS DIV ON DIV.DIVISION_ID = EMP.DIVISION_ID
        JOIN POSITIONS POS ON POS.POSITION_ID = EMP.POSITION_ID
        LEFT JOIN (
        	SELECT EMPLOYEE_ID, EMPLOYEE_NAME,DIVISION_ID,TREE_ID FROM EMPLOYEES
        ) MANAGER ON MANAGER.EMPLOYEE_ID = EMP.HEAD_ID
        LEFT JOIN (
		    SELECT EMPLOYEE_ID, RESIGN_DATE, RESIGN_NOTE FROM RESIGN_EMPLOYEES
		)RE ON RE.EMPLOYEE_ID = EMP.EMPLOYEE_ID
        WHERE EMP.EMPLOYEE_ID=#id#
	</select>
	
	<select id="getListByColumnSubordinate" resultClass="prime.user.task.TaskBean" parameterClass="java.util.Map">
		SELECT * FROM (SELECT page.*, ROWNUM rnum FROM
		(SELECT TASK.TASK_ID AS taskId,
			TASK_NAME AS taskName,
			TASK_RECEIVER as taskReceiver,
			TASK_ASSIGNER as taskAssigner,
			TASK_START_DATE as taskStartDate,
			TASK_ESTIMATE_DATE as taskEstimateDate,
			TASK_DESCRIPTION as taskDescription,
			PROJECT_MEMBER_ID as projectMemberId,
			EMP_ASSIGN.EMPLOYEE_NAME as taskAssignerName,
			EMP_RECEIVE.EMPLOYEE_NAME as taskReceiverName,
			TASK.TASK_LAST_STATUS AS taskLastStatus,
			ACTUAL_START				AS actualStart,
			ACTUAL_END					AS actualEnd,
			MAIN_DAYS					AS mainDays,
			NVL(((SELECT COUNT(ACTIVITY_ID) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS=#finish#) /
			  (SELECT NULLIF(COUNT(ACTIVITY_ID),0) FROM ACTIVITIES X WHERE X.TASK_ID=TASK.TASK_ID AND ACTIVITY_LAST_STATUS!=#abort#)
			) * 100, 0) AS percentage
		FROM TASKS TASK
		JOIN EMPLOYEES EMP_ASSIGN ON TASK.TASK_ASSIGNER=EMP_ASSIGN.EMPLOYEE_ID
		JOIN EMPLOYEES EMP_RECEIVE ON TASK.TASK_RECEIVER=EMP_RECEIVE.EMPLOYEE_ID
		JOIN (
		    SELECT TD.TASK_ID, MAX(TD.TASK_CHANGE_DATE) AS TASK_CHANGE_DATE FROM TASK_DETAILS TD
		    GROUP BY TD.TASK_ID
		) TASK_DET ON TASK_DET.TASK_ID=TASK.TASK_ID
		WHERE TASK_RECEIVER=#taskReceiver#
		<dynamic prepend="AND">
			<isNotNull property="columnSearch">
				<isEqual property="columnSearch" compareValue="NAME">
					UPPER(TASK_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="DESCRIPTION">
					UPPER(TASK_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ASSIGNER">
					UPPER(TASK_ASSIGNER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="RECEIVER">
					UPPER(TASK_RECEIVER) LIKE UPPER('%'||#value#||'%')
				</isEqual>
				<isEqual property="columnSearch" compareValue="STARTDATE">
					TASK_START_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
				<isEqual property="columnSearch" compareValue="ESTIMATEDATE">
					TASK_ESTIMATE_DATE BETWEEN TO_DATE(#startDate#, 'yyyy-mm-dd') AND TO_DATE(#untilDate#, 'yyyy-mm-dd')
				</isEqual>
			</isNotNull>
		</dynamic>
		ORDER BY TASK_NAME ASC) page 
		WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	

</sqlMap>