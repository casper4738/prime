<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="activity">

	<insert id="insert" parameterClass="prime.user.activity.ActivityBean">
		INSERT INTO ACTIVITIES 
			(ACTIVITY_ID, TASK_ID, ACTIVITY_NAME, ACTIVITY_DESCRIPTION, UPDATED_BY)	
		VALUES 
			(#activityId#,#taskId#,#activityName#,#activityDescription#, #updateBy#)
	</insert>
	
	<insert id="insertDetail" parameterClass="prime.user.activity.ActivityBean">
		INSERT INTO ACTIVITY_DETAILS 
			(ACTIVITY_ID, ACTIVITY_CHANGE_DATE, ACTIVITY_STATUS, ACTIVITY_CHANGE_NOTE)  
		VALUES 
			(#activityId#, SYSDATE, #activityStatus#, #activityChangeNote#)
	</insert>
	
	<insert id="insertDetailBySelectTask" parameterClass="prime.user.activity.ActivityBean">
		INSERT INTO ACTIVITY_DETAILS 
			(ACTIVITY_ID, ACTIVITY_CHANGE_DATE, ACTIVITY_STATUS, ACTIVITY_CHANGE_NOTE)  
		SELECT ACT.ACTIVITY_ID, SYSDATE,  #activityStatus#, #activityChangeNote#
		FROM TASKS TASK 
        JOIN ACTIVITIES ACT ON ACT.TASK_ID = TASK.TASK_ID
        WHERE 
       		TASK.TASK_RECEIVER 		= #taskReceiver# 
        AND 	
       		TASK.PROJECT_MEMBER_ID 	= #projectMemberId#
	</insert>
	
	<insert id="insertDetailByTaskId" parameterClass="prime.user.activity.ActivityBean">
		INSERT INTO ACTIVITY_DETAILS 
			(ACTIVITY_ID, ACTIVITY_CHANGE_DATE, ACTIVITY_STATUS, ACTIVITY_CHANGE_NOTE)  
		SELECT ACT.ACTIVITY_ID, SYSDATE,  #activityStatus#, #activityChangeNote#
		FROM TASKS TASK 
        JOIN ACTIVITIES ACT ON ACT.TASK_ID = TASK.TASK_ID
        WHERE TASK.TASK_ID = #taskId# 
	</insert>
	
	
	<update id="update" parameterClass="prime.user.activity.ActivityBean">
		UPDATE ACTIVITIES SET 
			ACTIVITY_DESCRIPTION = #activityDescription#
		WHERE 
			ACTIVITY_ID=#activityId#
	</update>
	
	<select id="getNewId" resultClass="java.lang.Integer">
		SELECT 
			NVL(MAX(ACTIVITY_ID)+1, 1) 
		FROM 
			ACTIVITIES
	</select>
	
	<select id="get" resultClass="prime.user.activity.ActivityBean" parameterClass="java.lang.Integer">
		SELECT
			ACTIVITY_ID 			AS activityId, 
			TASK_ID 				AS taskId,
			ACTIVITY_NAME 			AS activityName,
			ACTIVITY_DESCRIPTION 	AS activityDescription
		FROM 
			ACTIVITIES
		WHERE 
			ACTIVITY_ID=#id#
	</select>
	
	<select id="getDetail" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT 
			ACTIVITY_NAME 				 AS activityName,
			ACT.ACTIVITY_ID 			 AS activityId, 
		    ACTIVITY_NAME 				 AS activityName, 
		    ACT.ACTIVITY_DESCRIPTION 	 AS activityDescription,
		    ACT_DET.ACTIVITY_CHANGE_DATE AS activityChangeDate,
		    ACT.ACTIVITY_LAST_STATUS 	 AS activityLastStatus,
			TASK.TASK_NAME 				 AS taskName
        FROM 
        	ACTIVITIES ACT
        JOIN 
        	ACTIVITY_DETAILS ACT_DET ON ACT_DET.ACTIVITY_ID=ACT.ACTIVITY_ID
        JOIN 
        	TASKS TASK ON TASK.TASK_ID = ACT.TASK_ID
		WHERE 
			ACT_DET.ACTIVITY_ID=#activityId# 
		AND TO_CHAR(ACT_DET.ACTIVITY_CHANGE_DATE, 'yyyy-mm-dd hh24:mi:ss') = #activityChangeDate#
	</select>
	
	<select id="getListActivityDetail" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT 
			ACTIVITY_CHANGE_DATE AS activityChangeDate,
			ACTIVITY_STATUS 	 AS activityStatus,
			ACTIVITY_CHANGE_NOTE AS activityChangeNote
        FROM 
        	ACTIVITY_DETAILS ACT_DET
		WHERE 
			ACTIVITY_ID=#activityId#
	    ORDER BY 
	    	ACTIVITY_CHANGE_DATE DESC) page
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getListByColumn" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
        (SELECT DISTINCT
            ACT.ACTIVITY_ID 		 	 AS activityId, 
            ACTIVITY_NAME 	 		 	 AS activityName, 
            ACT.ACTIVITY_DESCRIPTION 	 AS activityDescription,
            ACT.ACTIVITY_LAST_STATUS 	 AS activityLastStatus,
            ACT_DET.ACTIVITY_CHANGE_DATE AS activityChangeDate
        FROM 
        	ACTIVITIES ACT
        JOIN (
            SELECT AD.ACTIVITY_ID, MAX(AD.ACTIVITY_CHANGE_DATE) AS ACTIVITY_CHANGE_DATE FROM ACTIVITY_DETAILS AD
            GROUP BY AD.ACTIVITY_ID
        ) ACT_DET ON ACT_DET.ACTIVITY_ID=ACT.ACTIVITY_ID
        WHERE 
        	ACT.TASK_ID = #taskId#
        <dynamic prepend="AND">
            <isNotNull property="columnSearch">
                <isEqual property="columnSearch" compareValue="NAME">
                      UPPER(ACTIVITY_NAME) LIKE UPPER('%'||#value#||'%')
                </isEqual> 
                <isEqual property="columnSearch" compareValue="DESCRIPTION">
                      UPPER(ACT.ACTIVITY_DESCRIPTION) LIKE UPPER('%'||#value#||'%')
                </isEqual> 
            </isNotNull>
        </dynamic>
        ORDER BY ACTIVITY_NAME ASC) page 
        WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<select id="getCountByColumn" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1)
		FROM ACTIVITIES ACT
		JOIN (
		    SELECT AD.ACTIVITY_ID, MAX(AD.ACTIVITY_CHANGE_DATE) AS ACTIVITY_CHANGE_DATE FROM ACTIVITY_DETAILS AD
		    GROUP BY AD.ACTIVITY_ID
		) ACT_DET ON ACT_DET.ACTIVITY_ID=ACT.ACTIVITY_ID
		WHERE ACT.TASK_ID = #taskId#
	    <dynamic prepend="AND">
	        <isNotNull property="columnSearch">
		      	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(ACTIVITY_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	</select>
	
	<select id="isAllFinished" resultClass="java.lang.Boolean" parameterClass="java.util.Map">
		<!-- SELECT 
		    CASE WHEN COUNT(1) > 0 THEN 0
		         ELSE 1
		    END    
		FROM ACTIVITIES WHERE TASK_ID= #taskId# AND NVL(ACTIVITY_LAST_STATUS, 0) != #finish#
		AND NVL(ACTIVITY_LAST_STATUS, 0) != #abort# -->
		SELECT 
		CASE WHEN (SELECT COUNT(1) FROM ACTIVITIES WHERE TASK_ID=#taskId#) = 0 THEN 0
		     WHEN (SELECT 
		                CASE WHEN  COUNT(1) > 0 THEN 0
		                     ELSE 1
		                END    
		           FROM ACTIVITIES WHERE TASK_ID=#taskId# AND NVL(ACTIVITY_LAST_STATUS, 0) != #finish#
		           AND NVL(ACTIVITY_LAST_STATUS, 0) != #abort#) = 0 THEN 0
		    WHEN (SELECT 
		                CASE WHEN  COUNT(1) > 0 THEN 0
		                     ELSE 1
		                END    
		           FROM ACTIVITIES WHERE TASK_ID=#taskId# AND NVL(ACTIVITY_LAST_STATUS, 0) != #finish#
		           AND NVL(ACTIVITY_LAST_STATUS, 0) != #abort#) = 1 THEN 1
		     ELSE 0
		END
		FROM DUAL
	</select>
	
	<!-- show in select activity form (dashboard) -->
	
	<select id="getCountActivityDetail" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1)
        FROM ACTIVITY_DETAILS ACT_DET
		WHERE ACTIVITY_ID=#activityId# 
	</select>
	
	<!-- List Data for Select Activity form -->
	<select id="getListByEmployeeId" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT AC.ACTIVITY_ID AS activityId, 
        AC.TASK_ID AS taskId,
        AD.ACTIVITY_STATUS AS activityStatus,
        TSK.TASK_ASSIGNER AS taskAssigner,
        TSK.EMPLOYEE_NAME AS taskAssignerName,
        AC.ACTIVITY_NAME AS activityName,
        AC.ACTIVITY_DESCRIPTION AS activityDescription,
        AD.ACTIVITY_CHANGE_DATE AS changeDate,
        TSK.TASK_NAME AS taskName
        FROM ACTIVITIES AC 
        INNER JOIN( 
            SELECT TASK_ID,TASK_ASSIGNER, TASK_NAME,TASK_RECEIVER, EMPLOYEE_NAME FROM TASKS 
            JOIN EMPLOYEES EMP ON TASK_ASSIGNER = EMP.EMPLOYEE_ID
        )TSK ON AC.TASK_ID = TSK.TASK_ID
        LEFT JOIN 
        (
             SELECT GROUPEDAD.ACTIVITY_ID, LAST_UPDATE, AD.ACTIVITY_STATUS, AD.ACTIVITY_CHANGE_DATE  FROM ACTIVITY_DETAILS AD
             INNER JOIN 
                    (SELECT ACTIVITY_ID, MAX(ACTIVITY_CHANGE_DATE) as LAST_UPDATE from ACTIVITY_DETAILS GROUP BY ACTIVITY_ID) 
              GROUPEDAD      
              ON AD.ACTIVITY_ID = GROUPEDAD.ACTIVITY_ID
              AND ACTIVITY_CHANGE_DATE = LAST_UPDATE
        ) AD
        ON AC.ACTIVITY_ID = AD.ACTIVITY_ID 
        WHERE TASK_RECEIVER=#id# AND AC.ACTIVITY_ID NOT IN (SELECT ACTIVITY_ID FROM EMPLOYEE_TO_DO_LISTS)
        AND ACTIVITY_STATUS != '4' AND ACTIVITY_STATUS != '5'  <!-- 4 adalah status Finish ATAU 5 ABORT -->
	    <dynamic prepend="AND">
	        <isNotNull property="columnSearch">
		       	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(ACTIVITY_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	    ORDER BY ACTIVITY_NAME ASC) page 
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<!-- Total Record in page for Select Activity form -->
	<select id="getCountListActivityById" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(1) 
		FROM ACTIVITIES AC 
		INNER JOIN TASKS TSK ON AC.TASK_ID = TSK.TASK_ID
		LEFT JOIN 
		(
			 SELECT AD.* FROM ACTIVITY_DETAILS AD
             INNER JOIN 
                    (SELECT ACTIVITY_ID, MAX(ACTIVITY_CHANGE_DATE) as LAST_UPDATE from ACTIVITY_DETAILS GROUP BY ACTIVITY_ID) 
              GROUPEDAD      
              ON AD.ACTIVITY_ID = GROUPEDAD.ACTIVITY_ID
              AND ACTIVITY_CHANGE_DATE = LAST_UPDATE
		) AD
		ON AC.ACTIVITY_ID = AD.ACTIVITY_ID 
		WHERE TASK_RECEIVER=#receiverId# AND AC.ACTIVITY_ID NOT IN (SELECT ACTIVITY_ID FROM EMPLOYEE_TO_DO_LISTS)
        AND ACTIVITY_STATUS != '4' AND ACTIVITY_STATUS != '5' <!-- 4 adalah status Finish ATAU 5 ABORT -->
	    <dynamic prepend="AND">
	        <isNotNull property="columnSearch">
		      	<isEqual property="columnSearch" compareValue="NAME">
			          UPPER(ACTIVITY_NAME) LIKE UPPER('%'||#value#||'%')
				</isEqual> 
	        </isNotNull>
	    </dynamic>
	</select>
	
	<!-- show for to-do-list -->
	<select id="getToDoListById" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT * FROM  (SELECT page.*, ROWNUM rnum FROM 
		(SELECT TLD.ACTIVITY_ID AS activityId, 
		ACTIVITY_NAME AS activityName,
		TASK_NAME AS taskName,
		EMPLOYEE_ID as taskReceiver,
		ACTIVITY_STATUS as activityStatus
		FROM EMPLOYEE_TO_DO_LISTS TLD
		INNER JOIN ACTIVITIES ACT ON ACT.ACTIVITY_ID = TLD.ACTIVITY_ID
		INNER JOIN TASKS TSK ON TSK.TASK_ID = ACT.TASK_ID
		LEFT JOIN 
		(
		 SELECT AD.* FROM ACTIVITY_DETAILS AD
            INNER JOIN 
                   (SELECT ACTIVITY_ID, MAX(ACTIVITY_CHANGE_DATE) as LAST_UPDATE from ACTIVITY_DETAILS GROUP BY ACTIVITY_ID) 
             GROUPEDAD      
             ON AD.ACTIVITY_ID = GROUPEDAD.ACTIVITY_ID
             AND ACTIVITY_CHANGE_DATE = LAST_UPDATE
		) AD
		ON ACT.ACTIVITY_ID = AD.ACTIVITY_ID 
		WHERE EMPLOYEE_ID=#id#
		ORDER BY TLD.ACTIVITY_ID ) page 
	    WHERE ROWNUM <![CDATA[ <= ]]> #endRow#) WHERE rnum <![CDATA[ >= ]]> #startRow#
	</select>
	
	<!-- Total To Do List -->
	<select id="getCountToDoListById" resultClass="java.lang.Integer" parameterClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM EMPLOYEE_TO_DO_LISTS TLD
		INNER JOIN ACTIVITIES ACT ON ACT.ACTIVITY_ID = TLD.ACTIVITY_ID
		INNER JOIN TASKS TSK ON TSK.TASK_ID = ACT.TASK_ID
		LEFT JOIN 
		(
		 SELECT AD.* FROM ACTIVITY_DETAILS AD
            INNER JOIN 
                   (SELECT ACTIVITY_ID, MAX(ACTIVITY_CHANGE_DATE) as LAST_UPDATE from ACTIVITY_DETAILS GROUP BY ACTIVITY_ID) 
             GROUPEDAD      
             ON AD.ACTIVITY_ID = GROUPEDAD.ACTIVITY_ID
             AND ACTIVITY_CHANGE_DATE = LAST_UPDATE
		) AD
		ON ACT.ACTIVITY_ID = AD.ACTIVITY_ID 
		WHERE EMPLOYEE_ID=#id#
		ORDER BY TLD.ACTIVITY_ID 
	</select>
	
	<!-- Insert when Add Item To Do List -->
	<insert id="insertToDoList" parameterClass="java.util.Map">
		INSERT INTO EMPLOYEE_TO_DO_LISTS
		(EMPLOYEE_ID , ACTIVITY_ID) VALUES 
		(#receiverId#, #activityId#)
	</insert>
	
	<!-- Delete from To Do List page-->
	<delete id="deleteToDoList" parameterClass="java.util.Map">
		DELETE FROM EMPLOYEE_TO_DO_LISTS
		WHERE EMPLOYEE_ID = #receiverId# and ACTIVITY_ID = #activityId#
	</delete>
	
	<!-- Insert Activity Detail when Start, Pause, Finish -->
	<insert id="insertActivityDetail" parameterClass="java.util.Map">
		INSERT INTO ACTIVITY_DETAILS
			(ACTIVITY_ID , ACTIVITY_CHANGE_DATE, ACTIVITY_STATUS, ACTIVITY_CHANGE_NOTE)  
		VALUES (#activityId#, SYSDATE, #status#, #activityDetailNote#)
	</insert>

	<!-- Show for Progress Bar Activity-->
	<select id="getCurrentListActivity" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
        SELECT ACT.ACTIVITY_NAME as activityName,
               ACT.ACTIVITY_ID as activityId,
               ACT.ACTIVITY_LAST_STATUS as activityLastStatus
        FROM ACTIVITIES ACT    
        INNER JOIN (
            SELECT DISTINCT ACTIVITY_ID
            FROM ACTIVITY_DETAILS
        	WHERE ACTIVITY_CHANGE_DATE &lt;= TO_TIMESTAMP('$currentDate$ 23:59:59', 'dd-mm-yyyy hh24:mi:ss')
        ) AD1 ON AD1.ACTIVITY_ID = ACT.ACTIVITY_ID
        INNER JOIN TASKS TSK ON TSK.TASK_ID = ACT.TASK_ID
        WHERE TASK_RECEIVER=#employeeId#     
        ORDER BY ACTIVITY_NAME
	</select>
	
	<select id="getPreviousDateOnProgressActivity" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
        SELECT AD1.ACTIVITY_ID, AD1.ACTIVITY_STATUS, AD1.activity_change_date FROM activity_details AD1
		INNER JOIN (
    		SELECT ACTIVITY_ID, MAX(ACTIVITY_CHANGE_DATE) as ACTIVITY_CHANGE_DATE FROM (
        		SELECT ACTIVITY_ID, ACTIVITY_CHANGE_DATE, ACTIVITY_STATUS 
        		FROM ACTIVITY_DETAILS
        		WHERE ACTIVITY_CHANGE_DATE &lt;= TO_TIMESTAMP('$currentDate$ 00:00:01', 'dd-mm-yyyy hh24:mi:ss')
    		)
    		GROUP BY ACTIVITY_ID
		) AD2 
		ON AD1.ACTIVITY_ID= AD2.ACTIVITY_ID AND
   		   AD1.ACTIVITY_CHANGE_DATE = AD2.ACTIVITY_CHANGE_DATE
		WHERE AD1.ACTIVITY_STATUS = #statusProgress#
	</select>
	
	<select id="getRangeTimeByActivityId" resultClass="prime.user.activity.ActivityBean" parameterClass="java.util.Map">
		SELECT ACTIVITY_CHANGE_DATE as activityChangeDate,
			   ACTIVITY_STATUS as activityStatus
		FROM ACTIVITY_DETAILS 
		WHERE ACTIVITY_ID = #activityId# AND
			  ACTIVITY_CHANGE_DATE &lt;= TO_TIMESTAMP('$currentDate$ 23:59:59','dd-mm-yyyy hh24:mi:ss') 
	    ORDER BY ACTIVITY_CHANGE_DATE DESC
	</select>
</sqlMap>
